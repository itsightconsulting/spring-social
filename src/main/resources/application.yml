spring:
    datasource:
        url: jdbc:postgresql://dev-db.ccnth4cssgmn.us-east-2.rds.amazonaws.com/runfit
        username: postgres
        password: ${DB_PROD_PASSWORD}
        driver-class-name: org.postgresql.Driver
    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming:
              implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        properties:
            hibernate:
              temp:
                use_jdbc_metadata_defaults: false
                jdbc:
                  lob:
                    non_contextual_creation: true
        open-in-view: false
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
              clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 692197554524442
              clientSecret: c937fe7f4f4605639ec8d26ef1b5df75
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: d3e47fc2ddd966fa4352
              clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(220).height(220)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDXXX
    tokenExpirationMsec: 60000
    #864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - http://ec2-18-191-219-0.us-east-2.compute.amazonaws.com/oauth2/redirect
      - http://52.186.67.112:8080/oauth2/redirect
      - https://www.runfit.pe/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
